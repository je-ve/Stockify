<div class="d-flex justify-content-between align-items-center mb-2">
	@if (TotalPages > 1)
	{
		<nav>
			<ul class="pagination mb-0">
				<li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
					<button class="page-link" @onclick="() => GoToPage(1)">Eerste</button>
				</li>

				<li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
					<button class="page-link" @onclick="() => GoToPage(CurrentPage - 1)">Vorige</button>
				</li>

				@foreach (int number in GetPageNumbersToDisplay())
				{
					if (number == -1)
					{
						<li class="page-item disabled"><span class="page-link">…</span></li>
					}
					else
					{
						int pageNumber = number;
						<li class="page-item @(CurrentPage == pageNumber ? "active" : "")">
							<button class="page-link" @onclick="() => GoToPage(pageNumber)">@pageNumber</button>
						</li>
					}
				}

				<li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
					<button class="page-link" @onclick="() => GoToPage(CurrentPage + 1)">Volgende</button>
				</li>

				<li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
					<button class="page-link" @onclick="() => GoToPage(TotalPages)">Laatste</button>
				</li>
			</ul>
		</nav>
	}
</div>


@code {
	[Parameter] public int CurrentPage { get; set; }
	[Parameter] public int TotalPages { get; set; }
	[Parameter] public EventCallback<int> OnPageChanged { get; set; }

	private async Task GoToPage(int page)
	{
		if (page < 1 || page > TotalPages) return;
		await OnPageChanged.InvokeAsync(page);
	}

	private List<int> GetPageNumbersToDisplay()
	{
		var pages = new List<int>();

		if (TotalPages <= 7)
		{
			for (int i = 1; i <= TotalPages; i++)
				pages.Add(i);
		}
		else
		{
			pages.Add(1); // Always show first page

			// Show ellipsis if current page is beyond page 4
			if (CurrentPage > 4)
				pages.Add(-1); // -1 = ellipsis

			// Determine start and end of middle page range
			int start = Math.Max(2, CurrentPage - 2);
			int end = Math.Min(TotalPages - 1, CurrentPage + 2);

			// Adjust range to always show 5 middle pages when possible
			if (CurrentPage <= 4)
			{
				end = 6;
			}
			else if (CurrentPage >= TotalPages - 3)
			{
				start = TotalPages - 5;
			}

			for (int i = start; i <= end; i++)
			{
				if (i > 1 && i < TotalPages)
					pages.Add(i);
			}

			// Show ellipsis if not already near the end
			if (CurrentPage < TotalPages - 3)
				pages.Add(-1);

			pages.Add(TotalPages); // Always show last page
		}
		return pages;
	}

}